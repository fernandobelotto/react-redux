(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{147:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),s=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=s(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=s(n),u=r,m=d["".concat(i,".").concat(u)]||d[u]||b[u]||a;return n?o.a.createElement(m,c(c({ref:t},l),{},{components:n})):o.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},56:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return s}));var r=n(2),o=n(6),a=(n(0),n(147)),i={id:"provider",title:"Provider",sidebar_label:"Provider"},c={unversionedId:"api/provider",id:"version-5.x/api/provider",isDocsHomePage:!1,title:"Provider",description:"``",source:"@site/versioned_docs\\version-5.x\\api\\Provider.md",slug:"/api/provider",permalink:"/react-redux/5.x/api/provider",version:"5.x",sidebar_label:"Provider",sidebar:"version-5.x/docs",previous:{title:"connectAdvanced",permalink:"/react-redux/5.x/api/connect-advanced"},next:{title:"Troubleshooting",permalink:"/react-redux/5.x/troubleshooting"}},p=[{value:"Overview",id:"overview",children:[{value:"Props",id:"props",children:[]},{value:"Example Usage",id:"example-usage",children:[]}]},{value:"createProvider",id:"createprovider",children:[{value:"Arguments",id:"arguments",children:[]},{value:"Examples",id:"examples",children:[]}]}],l={rightToc:p};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"provider-"},Object(a.b)("inlineCode",{parentName:"h1"},"<Provider />")),Object(a.b)("h2",{id:"overview"},"Overview"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"<Provider />")," makes the Redux ",Object(a.b)("inlineCode",{parentName:"p"},"store")," available to any nested components that have been wrapped in the ",Object(a.b)("inlineCode",{parentName:"p"},"connect()")," function."),Object(a.b)("p",null,"Since any React component in a React-Redux app can be connected, most applications will render a ",Object(a.b)("inlineCode",{parentName:"p"},"<Provider>")," at the top level, with the entire app\u2019s component tree inside of it."),Object(a.b)("p",null,"Normally, you can\u2019t use a connected component unless it is nested inside of a ",Object(a.b)("inlineCode",{parentName:"p"},"<Provider>")," ."),Object(a.b)("p",null,"Note: If you really need to, you can manually pass ",Object(a.b)("inlineCode",{parentName:"p"},"store")," as a prop to a connected component, but we only recommend to do this for stubbing ",Object(a.b)("inlineCode",{parentName:"p"},"store")," in unit tests, or in non-fully-React codebases. Normally, you should just use ",Object(a.b)("inlineCode",{parentName:"p"},"<Provider>"),"."),Object(a.b)("h3",{id:"props"},"Props"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"store")," (Redux Store)\nThe single Redux ",Object(a.b)("inlineCode",{parentName:"p"},"store")," in your application."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"children")," (ReactElement)\nThe root of your component hierarchy."),Object(a.b)("h3",{id:"example-usage"},"Example Usage"),Object(a.b)("p",null,"In the example below, the ",Object(a.b)("inlineCode",{parentName:"p"},"<App />")," component is our root-level component. This means it\u2019s at the very top of our component hierarchy."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Vanilla React Example")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"    import React from 'react';\n    import ReactDOM from 'react-dom';\n    import { Provider } from 'react-redux';\n\n    import { App } from './App';\n    import createStore from './createReduxStore';\n\n    const store = createStore();\n\n    ReactDOM.render(\n      <Provider store={store}>\n        <App />\n      </Provider>,\n      document.getElementById('root')\n    )\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Usage with React Router")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"    import React from 'react';\n    import ReactDOM from 'react-dom';\n    import { Provider } from 'react-redux';\n    import { Router, Route } from 'react-router-dom';\n\n    import { App } from './App';\n    import { Foo } from './Foo';\n    import { Bar } from './Bar';\n    import createStore from './createReduxStore';\n\n    const store = createStore();\n\n    ReactDOM.render(\n      <Provider store={store}>\n        <Router history={history}>\n          <Route path=\"/\" component={App}>\n            <Route path=\"foo\" component={Foo}/>\n            <Route path=\"bar\" component={Bar}/>\n          </Route>\n        </Router>\n      </Provider>,\n      document.getElementById('root')\n    )\n")),Object(a.b)("h2",{id:"createprovider"},"createProvider"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"createProvider([storeKey])\n")),Object(a.b)("p",null,"Creates a new ",Object(a.b)("inlineCode",{parentName:"p"},"<Provider>")," which will set the Redux Store on the passed key of the context. You probably only need this if you are in the inadvisable position of having multiple stores. You will also need to pass the same ",Object(a.b)("inlineCode",{parentName:"p"},"storeKey")," to the ",Object(a.b)("inlineCode",{parentName:"p"},"options")," argument of ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"#connectmapstatetoprops-mapdispatchtoprops-mergeprops-options"}),Object(a.b)("inlineCode",{parentName:"a"},"connect"))),Object(a.b)("h3",{id:"arguments"},"Arguments"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"[",Object(a.b)("inlineCode",{parentName:"li"},"storeKey"),"]"," (",Object(a.b)("em",{parentName:"li"},"String"),"): The key of the context on which to set the store. Default value: ",Object(a.b)("inlineCode",{parentName:"li"},"'store'"))),Object(a.b)("h3",{id:"examples"},"Examples"),Object(a.b)("p",null,"Before creating multiple stores, please go through this FAQ: ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"http://redux.js.org/docs/faq/StoreSetup.html#can-or-should-i-create-multiple-stores-can-i-import-my-store-directly-and-use-it-in-components-myself"}),"Can or should I create multiple stores?")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import {connect, createProvider} from 'react-redux'\n\nconst STORE_KEY = 'componentStore'\n\nexport const Provider = createProvider(STORE_KEY)\n\nfunction connectExtended(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n  options = {}\n) {\n  options.storeKey = STORE_KEY\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps,\n    options\n  )\n}\n\nexport {connectExtended as connect}\n")),Object(a.b)("p",null,"Now you can import the above ",Object(a.b)("inlineCode",{parentName:"p"},"Provider")," and ",Object(a.b)("inlineCode",{parentName:"p"},"connect")," and use them."))}s.isMDXComponent=!0}}]);