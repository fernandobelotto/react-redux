(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{147:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=r.a.createContext({}),s=function(e){var t=r.a.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},l=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=s(a),l=n,m=d["".concat(o,".").concat(l)]||d[l]||b[l]||c;return a?r.a.createElement(m,i(i({ref:t},u),{},{components:a})):r.a.createElement(m,i({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=l;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var u=2;u<c;u++)o[u]=a[u];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}l.displayName="MDXCreateElement"},75:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return s}));var n=a(2),r=a(6),c=(a(0),a(147)),o={id:"batch",title:"batch",sidebar_label:"batch()",hide_title:!0},i={unversionedId:"api/batch",id:"api/batch",isDocsHomePage:!1,title:"batch",description:"batch()",source:"@site/..\\docs\\api\\batch.md",slug:"/api/batch",permalink:"/react-redux/next/api/batch",version:"current",sidebar_label:"batch()",sidebar:"docs",previous:{title:"connectAdvanced",permalink:"/react-redux/next/api/connect-advanced"},next:{title:"Hooks",permalink:"/react-redux/next/api/hooks"}},p=[{value:"Refer\xeancias",id:"refer\xeancias",children:[]}],u={rightToc:p};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"batch"},Object(c.b)("inlineCode",{parentName:"h1"},"batch()")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"batch((fn: Function))\n")),Object(c.b)("p",null,"A API ",Object(c.b)("inlineCode",{parentName:"p"},"unstable_batchedUpdates ()")," do React permite que qualquer atualiza\xe7\xe3o do React em um tick de loop de evento seja agrupada em uma \xfanica passagem de renderiza\xe7\xe3o. O React j\xe1 usa isso internamente para seus pr\xf3prios retornos de chamada do manipulador de eventos. Essa API \xe9, na verdade, parte dos pacotes de renderiza\xe7\xe3o como ReactDOM e React Native, n\xe3o o n\xfacleo do React em si."),Object(c.b)("p",null,"Como o React-Redux precisa funcionar nos ambientes ReactDOM e React Native, cuidamos da importa\xe7\xe3o dessa API do renderizador correto no momento da constru\xe7\xe3o para nosso pr\xf3prio uso. Agora tamb\xe9m reexportamos esta fun\xe7\xe3o publicamente, renomeada para ",Object(c.b)("inlineCode",{parentName:"p"},"batch ()"),". Voc\xea pode us\xe1-la para garantir que v\xe1rias actions despachadas fora do React resultem apenas em uma \xfanica atualiza\xe7\xe3o de renderiza\xe7\xe3o, como esta:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"import { batch } from 'react-redux'\n\nfunction myThunk() {\n  return (dispatch, getState) => {\n// s\xf3 deve resultar em uma re-renderiza\xe7\xe3o combinada, n\xe3o duas\n    batch(() => {\n      dispatch(increment())\n      dispatch(increment())\n    })\n  }\n}\n")),Object(c.b)("h2",{id:"refer\xeancias"},"Refer\xeancias"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/facebook/react/commit/b41883fc708cd24d77dcaa767cde814b50b457fe"}),Object(c.b)("inlineCode",{parentName:"a"},"unstable_batchedUpdates()")," API do React"))))}s.isMDXComponent=!0}}]);