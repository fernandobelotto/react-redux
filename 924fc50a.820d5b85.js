(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{109:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return r})),n.d(a,"metadata",(function(){return p})),n.d(a,"rightToc",(function(){return s})),n.d(a,"default",(function(){return m}));var o=n(2),t=n(6),c=(n(0),n(147)),r={id:"connect-mapdispatch",title:"Connect: Despachando Actions com mapDispatchToProps",hide_title:!0,sidebar_label:"Connect: Despachando Actions com mapDispatchToProps"},p={unversionedId:"using-react-redux/connect-mapdispatch",id:"version-7.2/using-react-redux/connect-mapdispatch",isDocsHomePage:!1,title:"Connect: Despachando Actions com mapDispatchToProps",description:"Connect: Despachando Actions com mapDispatchToProps",source:"@site/versioned_docs\\version-7.2\\using-react-redux\\connect-dispatching-actions-with-mapDispatchToProps.md",slug:"/using-react-redux/connect-mapdispatch",permalink:"/react-redux/using-react-redux/connect-mapdispatch",version:"7.2",sidebar_label:"Connect: Despachando Actions com mapDispatchToProps",sidebar:"version-7.2/docs",previous:{title:"Connect: Extraindo dados com mapStateToProps",permalink:"/react-redux/using-react-redux/connect-mapstate"},next:{title:"Acessando a store",permalink:"/react-redux/using-react-redux/accessing-store"}},s=[{value:"Abordagens para despacho",id:"abordagens-para-despacho",children:[{value:"Padr\xe3o: <code>dispatch</code> como um Prop",id:"padr\xe3o-dispatch-como-um-prop",children:[]},{value:"Fornecendo um par\xe2metro <code>mapDispatchToProps</code>",id:"fornecendo-um-par\xe2metro-mapdispatchtoprops",children:[]}]},{value:"Duas formas de <code>mapDispatchToProps</code>",id:"duas-formas-de-mapdispatchtoprops",children:[]},{value:"Definindo <code>mapDispatchToProps</code> como uma fun\xe7\xe3o",id:"definindo-mapdispatchtoprops-como-uma-fun\xe7\xe3o",children:[{value:"Argumentos",id:"argumentos",children:[]},{value:"Retorna",id:"retorna",children:[]},{value:"Definindo a fun\xe7\xe3o <code>mapDispatchToProps</code> com<code> bindActionCreators</code>",id:"definindo-a-fun\xe7\xe3o-mapdispatchtoprops-com-bindactioncreators",children:[]},{value:"Injetando <code>dispatch</code> manualmente",id:"injetando-dispatch-manualmente",children:[]}]},{value:"Definindo <code>mapDispatchToProps</code> como um objeto",id:"definindo-mapdispatchtoprops-como-um-objeto",children:[]},{value:"Problemas comuns",id:"problemas-comuns",children:[{value:"Por que meu componente n\xe3o est\xe1 recebendo <code>dispatch</code>?",id:"por-que-meu-componente-n\xe3o-est\xe1-recebendo-dispatch",children:[]},{value:"Posso <code>mapDispatchToProps</code> sem <code>mapStateToProps</code> no Redux?",id:"posso-mapdispatchtoprops-sem-mapstatetoprops-no-redux",children:[]},{value:"Posso chamar <code>store.dispatch</code>?",id:"posso-chamar-storedispatch",children:[]}]},{value:"Links e refer\xeancias",id:"links-e-refer\xeancias",children:[]}],i={rightToc:s};function m(e){var a=e.components,n=Object(t.a)(e,["components"]);return Object(c.b)("wrapper",Object(o.a)({},i,n,{components:a,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"connect-despachando-actions-com-mapdispatchtoprops"},"Connect: Despachando Actions com ",Object(c.b)("inlineCode",{parentName:"h1"},"mapDispatchToProps")),Object(c.b)("p",null,"Como o segundo argumento passado para ",Object(c.b)("inlineCode",{parentName:"p"},"connect"),",",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," \xe9 usado para despachar actions para a store."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"dispatch")," \xe9 uma fun\xe7\xe3o da Redux store. Voc\xea chama ",Object(c.b)("inlineCode",{parentName:"p"},"store.dispatch")," para despachar uma a\xe7\xe3o.\nEssa \xe9 a \xfanica maneira de acionar uma mudan\xe7a de estado."),Object(c.b)("p",null,"Com React Redux, seus componentes nunca acessam a store diretamente - ",Object(c.b)("inlineCode",{parentName:"p"},"connect")," faz isso por voc\xea.\nO React Redux oferece duas maneiras de permitir que os componentes despachem actions:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Por padr\xe3o, um componente conectado recebe ",Object(c.b)("inlineCode",{parentName:"li"},"props.dispatch")," e pode despachar actions por conta pr\xf3pria."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"connect")," pode aceitar um argumento chamado",Object(c.b)("inlineCode",{parentName:"li"}," mapDispatchToProps"),", que permite criar fun\xe7\xf5es que despacham quando chamadas, e passar essas fun\xe7\xf5es como suportes para o seu componente.")),Object(c.b)("p",null,"As fun\xe7\xf5es ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," s\xe3o normalmente referidas como ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatch")," para abrevia\xe7\xe0o, mas o nome da vari\xe1vel real usado pode ser o que voc\xea quiser."),Object(c.b)("h2",{id:"abordagens-para-despacho"},"Abordagens para despacho"),Object(c.b)("h3",{id:"padr\xe3o-dispatch-como-um-prop"},"Padr\xe3o: ",Object(c.b)("inlineCode",{parentName:"h3"},"dispatch")," como um Prop"),Object(c.b)("p",null,"Se voc\xea n\xe3o especificar o segundo argumento para ",Object(c.b)("inlineCode",{parentName:"p"},"connect()"),", seu componente receber\xe1 ",Object(c.b)("inlineCode",{parentName:"p"},"dispatch")," por padr\xe3o. Por exemplo:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"connect()(MyComponent)\n// que \xe9 equivalente a\nconnect(\n  null,\n  null\n)(MyComponent)\n\n// ou\nconnect(mapStateToProps /** nenhum segundo argumento */)(MyComponent)\n")),Object(c.b)("p",null,"Uma vez que voc\xea conectou seu componente desta forma, ele recebe ",Object(c.b)("inlineCode",{parentName:"p"},"props.dispatch"),". Voc\xea pode us\xe1-lo para despachar actions para a store."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"function Counter({ count, dispatch }) {\n  return (\n    <div>\n      <button onClick={() => dispatch({ type: 'DECREMENT' })}>-</button>\n      <span>{count}</span>\n      <button onClick={() => dispatch({ type: 'INCREMENT' })}>+</button>\n      <button onClick={() => dispatch({ type: 'RESET' })}>reset</button>\n    </div>\n  )\n}\n")),Object(c.b)("h3",{id:"fornecendo-um-par\xe2metro-mapdispatchtoprops"},"Fornecendo um par\xe2metro ",Object(c.b)("inlineCode",{parentName:"h3"},"mapDispatchToProps")),Object(c.b)("p",null,"Fornecer um ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," permite que voc\xea especifique quais actions seu componente pode precisar despachar. Ele permite que voc\xea forne\xe7a fun\xe7\xf5es de despacho de actions como props. Portanto, em vez de chamar ",Object(c.b)("inlineCode",{parentName:"p"},"props.dispatch (() => increment ())"),", voc\xea pode chamar ",Object(c.b)("inlineCode",{parentName:"p"},"props.increment ()")," diretamente. Existem alguns motivos pelos quais voc\xea pode querer fazer isso."),Object(c.b)("h4",{id:"mais-declarativo"},"Mais Declarativo"),Object(c.b)("p",null,"Primeiro, encapsular a l\xf3gica de despacho em fun\xe7\xe3o torna a implementa\xe7\xe3o mais declarativa.\nDespachar uma action e deixar a Redux store lidar com o fluxo de dados \xe9 ",Object(c.b)("em",{parentName:"p"},"como")," implementar o comportamento, ao inv\xe9s de ",Object(c.b)("em",{parentName:"p"},"o que")," ele faz."),Object(c.b)("p",null,"Um bom exemplo seria despachar uma a\xe7\xe3o quando um bot\xe3o \xe9 clicado. Conectar o bot\xe3o diretamente provavelmente n\xe3o faz sentido conceitualmente, e nem mesmo ter a refer\xeancia de bot\xe3o ",Object(c.b)("inlineCode",{parentName:"p"},"dispatch"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'// bot\xe3o precisa ter \x7fconhecimento da "dispatch"\n<button onClick={() => dispatch({ type: "SOMETHING" })} />\n\n// bot\xe3o sem conhecer "dispatch",\n<button onClick={doSomething} />\n')),Object(c.b)("p",null,"Depois de envolver todos os nossos action creators com fun\xe7\xf5es que despacham as actions, o componente est\xe1 livre da necessidade de ",Object(c.b)("inlineCode",{parentName:"p"},"dispatch"),".\nPortanto, ",Object(c.b)("strong",{parentName:"p"},"se voc\xea definir seu pr\xf3prio ",Object(c.b)("inlineCode",{parentName:"strong"},"mapDispatchToProps"),", o componente conectado n\xe3o receber\xe1 mais",Object(c.b)("inlineCode",{parentName:"strong"}," dispatch"),".")),Object(c.b)("h4",{id:"passar-l\xf3gica-de-despacho-de-action-para-componentes-filhos-desconectados"},"Passar L\xf3gica de Despacho de action para Componentes Filhos (Desconectados)"),Object(c.b)("p",null,'Al\xe9m disso, voc\xea tamb\xe9m ganha a capacidade de passar as fun\xe7\xf5es de despacho de actions para componentes filhos (provavelmente n\xe3o conectados).\nIsso permite que mais componentes despachem acions, mantendo-os "inconscientes" do Redux.'),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),"// passa toggleTodo para o componente filho\n// tornando Todo capaz de despachar a action toggleTodo\nconst TodoList = ({ todos, toggleTodo }) => (\n  <div>\n    {todos.map(todo => (\n      <Todo todo={todo} onClick={toggleTodo} />\n    ))}\n  </div>\n)\n")),Object(c.b)("p",null,"Isso \xe9 o que o ",Object(c.b)("inlineCode",{parentName:"p"},"connect")," do React Redux faz - ele encapsula a l\xf3gica de falar com a store do Redux e permite que voc\xea n\xe3o se preocupe com isso. E \xe9 disso que voc\xea deve fazer uso total em sua implementa\xe7\xe3o."),Object(c.b)("h2",{id:"duas-formas-de-mapdispatchtoprops"},"Duas formas de ",Object(c.b)("inlineCode",{parentName:"h2"},"mapDispatchToProps")),Object(c.b)("p",null,"O par\xe2metro ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," pode ser de duas formas. Enquanto o forma de fun\xe7\xe3o permite mais personaliza\xe7\xe3o, a forma de objeto \xe9 mais f\xe1cil de usar."),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Forma de fun\xe7\xe3o"),": permite mais personaliza\xe7\xe3o, ganha acesso a ",Object(c.b)("inlineCode",{parentName:"li"},"dispatch")," e, opcionalmente,",Object(c.b)("inlineCode",{parentName:"li"}," ownProps")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Forma abreviada de objeto"),": Mais declarativo e f\xe1cil de usar")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"\u2b50 ",Object(c.b)("strong",{parentName:"p"},"Nota:")," Recomendamos usar a forma de objeto de ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps"),", a menos que voc\xea precise personalizar especificamente o comportamento da dispatch de alguma forma.")),Object(c.b)("h2",{id:"definindo-mapdispatchtoprops-como-uma-fun\xe7\xe3o"},"Definindo ",Object(c.b)("inlineCode",{parentName:"h2"},"mapDispatchToProps")," como uma fun\xe7\xe3o"),Object(c.b)("p",null,"Definir ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," como uma fun\xe7\xe3o oferece mais flexibilidade para personalizar as fun\xe7\xf5es que seu componente recebe e como elas despacham as actions.\nVoc\xea ganha acesso a ",Object(c.b)("inlineCode",{parentName:"p"},"dispatch")," e ",Object(c.b)("inlineCode",{parentName:"p"},"ownProps"),".\nVoc\xea pode usar esta oportunidade para escrever fun\xe7\xf5es personalizadas para serem chamadas por seus componentes conectados."),Object(c.b)("h3",{id:"argumentos"},"Argumentos"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("strong",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"strong"},"dispatch"))),Object(c.b)("li",{parentName:"ol"},Object(c.b)("strong",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"strong"},"ownProps")," (opicional)"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"dispatch"))),Object(c.b)("p",null,"A fun\xe7\xe3o ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," ser\xe1 chamada com ",Object(c.b)("inlineCode",{parentName:"p"},"dispatch")," como o primeiro argumento.\nVoc\xea normalmente far\xe1 uso disso retornando novas fun\xe7\xf5es que chamam ",Object(c.b)("inlineCode",{parentName:"p"},"dispatch()")," dentro de si mesmas, e passam um objecto de action simples diretamente ou passam o resultado de um action creator."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"const mapDispatchToProps = dispatch => {\n  return {\n    // despachando a\xe7\xf5es simples\n    increment: () => dispatch({ type: 'INCREMENT' }),\n    decrement: () => dispatch({ type: 'DECREMENT' }),\n    reset: () => dispatch({ type: 'RESET' })\n  }\n}\n")),Object(c.b)("p",null,"Provavelmente, voc\xea tamb\xe9m desejar\xe1 encaminhar argumentos para seus action creators:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"const mapDispatchToProps = dispatch => {\n  return {\n    // encaminhando argumentos explicitamente\n    onClick: event => dispatch(trackClick(event)),\n\n    // encaminhando argumentos implicitamente\n    onReceiveImpressions: (...impressions) =>\n      dispatch(trackImpressions(impressions))\n  }\n}\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"ownProps")," ( opicional )")),Object(c.b)("p",null,"Se sua fun\xe7\xe3o ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," for declarada como tendo dois par\xe2metros, ela ser\xe1 chamada com ",Object(c.b)("inlineCode",{parentName:"p"},"dispatch")," como o primeiro par\xe2metro e ",Object(c.b)("inlineCode",{parentName:"p"},"props")," passado para o componente conectado como o segundo par\xe2metro, e ser\xe1 novamente invocado sempre que o componente conectado recebe novos props."),Object(c.b)("p",null,"Isso significa que, em vez de vincular novamente os novos ",Object(c.b)("inlineCode",{parentName:"p"},"props")," aos despachantes de actions ap\xf3s a re-renderiza\xe7\xe3o do componente, voc\xea pode fazer isso quando os ",Object(c.b)("inlineCode",{parentName:"p"},"props")," do seu componente mudarem."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Vincula-se \xe0 montagem do componente")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"render() {\n  return <button onClick={() => this.props.toggleTodo(this.props.todoId)} />\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleTodo: todoId => dispatch(toggleTodo(todoId))\n  }\n}\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Vincula-se \xe0 mudan\xe7a de ",Object(c.b)("inlineCode",{parentName:"strong"},"props"))),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"render() {\n  return <button onClick={() => this.props.toggleTodo()} />\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    toggleTodo: () => dispatch(toggleTodo(ownProps.todoId))\n  }\n}\n")),Object(c.b)("h3",{id:"retorna"},"Retorna"),Object(c.b)("p",null,"Sua fun\xe7\xe3o ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," deve retornar um objeto simples:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Cada campo no objeto se tornar\xe1 uma prop separada para seu pr\xf3prio componente e o valor normalmente deve ser uma fun\xe7\xe3o que despacha uma action quando chamada."),Object(c.b)("li",{parentName:"ul"},"Se voc\xea usar action creators (em oposi\xe7\xe3o a objetos de action simples) dentro de ",Object(c.b)("inlineCode",{parentName:"li"},"dispatch"),", \xe9 uma conven\xe7\xe3o simplesmente nomear a chave de campo com o mesmo nome do action creator:")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"const increment = () => ({ type: 'INCREMENT' })\nconst decrement = () => ({ type: 'DECREMENT' })\nconst reset = () => ({ type: 'RESET' })\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // despachando a\xe7\xf5es retornadas pelos action creators\n    increment: () => dispatch(increment()),\n    decrement: () => dispatch(decrement()),\n    reset: () => dispatch(reset())\n  }\n}\n")),Object(c.b)("p",null,"O retorno da fun\xe7\xe3o ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," ser\xe1 mesclado ao seu componente conectado como props. Voc\xea pode cham\xe1-los diretamente para despachar sua action."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"function Counter({ count, increment, decrement, reset }) {\n  return (\n    <div>\n      <button onClick={decrement}>-</button>\n      <span>{count}</span>\n      <button onClick={increment}>+</button>\n      <button onClick={reset}>reset</button>\n    </div>\n  )\n}\n")),Object(c.b)("p",null,"(O c\xf3digo completo do exemplo do contador esta ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://codesandbox.io/s/yv6kqo1yw9"}),"neste CodeSandbox"),")"),Object(c.b)("h3",{id:"definindo-a-fun\xe7\xe3o-mapdispatchtoprops-com-bindactioncreators"},"Definindo a fun\xe7\xe3o ",Object(c.b)("inlineCode",{parentName:"h3"},"mapDispatchToProps")," com",Object(c.b)("inlineCode",{parentName:"h3"}," bindActionCreators")),Object(c.b)("p",null,"Envolver essas fun\xe7\xf5es manualmente \xe9 entediante, ent\xe3o Redux fornece uma fun\xe7\xe3o para simplificar isso."),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},Object(c.b)("inlineCode",{parentName:"p"},"bindActionCreators")," turns an object whose values are ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://redux.js.org/glossary#action-creator"}),"action creators"),", into an object with the same keys, but with every action creator wrapped into a ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://redux.js.org/api/store#dispatch"}),Object(c.b)("inlineCode",{parentName:"a"},"dispatch"))," call so they may be invoked directly. See ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://redux.js.org/api/bindactioncreators"}),"Redux Docs on ",Object(c.b)("inlineCode",{parentName:"a"},"bindActionCreators")),"\n",Object(c.b)("inlineCode",{parentName:"p"},"bindActionCreators")," transforma um objeto cujos valores s\xe3o ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://redux.js.org/glossary#action-creator"}),"action creators"),", em um objeto com as mesmas chaves, mas com cada action creator envolvido em um ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://redux.js.org/api/store#dispatch"}),Object(c.b)("inlineCode",{parentName:"a"},"dispatch"))," chamada para que eles possam ser chamados diretamente. Veja ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://redux.js.org/api/bindactioncreators"}),Object(c.b)("inlineCode",{parentName:"a"},"bindActionCreators")," no Docs do Redux"))),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"bindActionCreators")," aceita dois par\xe2metros:"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Uma ",Object(c.b)("strong",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"strong"},"fun\xe7\xe3o"))," (um action creator) ou um ",Object(c.b)("strong",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"strong"},"objeto"))," (cada campo um action creator)"),Object(c.b)("li",{parentName:"ol"},Object(c.b)("inlineCode",{parentName:"li"},"dispatch"))),Object(c.b)("p",null,"As fun\xe7\xf5es wrapper geradas por ",Object(c.b)("inlineCode",{parentName:"p"},"bindActionCreators")," ir\xe3o encaminhar automaticamente todos os seus argumentos, ent\xe3o voc\xea n\xe3o precisa fazer isso manualmente."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import { bindActionCreators } from 'redux'\n\nconst increment = () => ({ type: 'INCREMENT' })\nconst decrement = () => ({ type: 'DECREMENT' })\nconst reset = () => ({ type: 'RESET' })\n\n// liga um action creator\n// retorna (...args) => dispatch(increment(...args))\nconst boundIncrement = bindActionCreators(increment, dispatch)\n\n// liga um objeto cheio de action creators\nconst boundActionCreators = bindActionCreators(\n  { increment, decrement, reset },\n  dispatch\n)\n// retorna\n// {\n//   increment: (...args) => dispatch(increment(...args)),\n//   decrement: (...args) => dispatch(decrement(...args)),\n//   reset: (...args) => dispatch(reset(...args)),\n// }\n")),Object(c.b)("p",null,"Para usar ",Object(c.b)("inlineCode",{parentName:"p"},"bindActionCreators")," em nossa fun\xe7\xe3o",Object(c.b)("inlineCode",{parentName:"p"}," mapDispatchToProps"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import { bindActionCreators } from 'redux'\n// ...\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ increment, decrement, reset }, dispatch)\n}\n\n// componente recebe props.increment, props.decrement, props.reset\nconnect(\n  null,\n  mapDispatchToProps\n)(Counter)\n")),Object(c.b)("h3",{id:"injetando-dispatch-manualmente"},"Injetando ",Object(c.b)("inlineCode",{parentName:"h3"},"dispatch")," manualmente"),Object(c.b)("p",null,"Se o argumento ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," for fornecido, o componente n\xe3o receber\xe1 mais o",Object(c.b)("inlineCode",{parentName:"p"}," dispatch")," padr\xe3o. Voc\xea pode traz\xea-lo de volta adicionando-o manualmente ao retorno de seu ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps"),", embora na maioria das vezes voc\xea n\xe3o precise fazer isso:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import { bindActionCreators } from 'redux'\n// ...\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ increment, decrement, reset }, dispatch)\n  }\n}\n")),Object(c.b)("h2",{id:"definindo-mapdispatchtoprops-como-um-objeto"},"Definindo ",Object(c.b)("inlineCode",{parentName:"h2"},"mapDispatchToProps")," como um objeto"),Object(c.b)("p",null,"Voc\xea viu que a configura\xe7\xe3o para despachar action em um componente React segue um processo muito semelhante: definir um action creator, envolv\xea-lo em outra fun\xe7\xe3o que se pare\xe7a com ",Object(c.b)("inlineCode",{parentName:"p"},"(\u2026args) => dispatch(actionCreator(\u2026args))")," e passe essa fun\xe7\xe3o como uma prop para seu componente."),Object(c.b)("p",null,"Por isso ser t\xe3o comum, ",Object(c.b)("inlineCode",{parentName:"p"},"connect")," suporta uma forma \u201cabreviada de objeto\u201dpara o argumento ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps"),": se voc\xea passar um objeto cheio de action creators em vez de uma fun\xe7\xe3o, ",Object(c.b)("inlineCode",{parentName:"p"},"connect")," ir\xe1 automaticamente chamar ",Object(c.b)("inlineCode",{parentName:"p"},"bindActionCreators")," para voc\xea internamente."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Recomendamos sempre usar a forma \u201cabreviada de objeto\u201d de ",Object(c.b)("inlineCode",{parentName:"strong"},"mapDispatchToProps"),", a menos que voc\xea tenha um motivo espec\xedfico para personalizar o comportamento de despacho.")),Object(c.b)("p",null,"Observe que:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Cada campo do objeto ",Object(c.b)("inlineCode",{parentName:"li"},"mapDispatchToProps")," \xe9 considerado um action creator"),Object(c.b)("li",{parentName:"ul"},"Seu componente n\xe3o receber\xe1 mais ",Object(c.b)("inlineCode",{parentName:"li"},"dispatch")," como prop")),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"// React Redux faz isso para voc\xea automaticamente:\ndispatch => bindActionCreators(mapDispatchToProps, dispatch)\n")),Object(c.b)("p",null,"Portanto, nosso ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," pode ser simplesmente:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"const mapDispatchToProps = {\n  increment,\n  decrement,\n  reset\n}\n")),Object(c.b)("p",null,"Uma vez que o nome real da vari\xe1vel depende de voc\xea, voc\xea pode querer dar a ela um nome como ",Object(c.b)("inlineCode",{parentName:"p"},"actionCreators"),", ou mesmo definir o objeto inline na chamada para",Object(c.b)("inlineCode",{parentName:"p"}," connect"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'import {increment, decrement, reset} from "./counterActions";\n\nconst actionCreators = {\n  increment,\n  decrement,\n  reset\n}\n\nexport default connect(mapState, actionCreators)(Counter);\n\n// ou\nexport default connect(\n  mapState,\n  { increment, decrement, reset }\n)(Counter);\n')),Object(c.b)("h2",{id:"problemas-comuns"},"Problemas comuns"),Object(c.b)("h3",{id:"por-que-meu-componente-n\xe3o-est\xe1-recebendo-dispatch"},"Por que meu componente n\xe3o est\xe1 recebendo ",Object(c.b)("inlineCode",{parentName:"h3"},"dispatch"),"?"),Object(c.b)("p",null,"Tamb\xe9m conhecido como"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"TypeError: this.props.dispatch is not a function\n")),Object(c.b)("p",null,"Este \xe9 um erro comum que acontece quando voc\xea tenta chamar ",Object(c.b)("inlineCode",{parentName:"p"},"this.props.dispatch"),", mas ",Object(c.b)("inlineCode",{parentName:"p"},"dispatch")," n\xe3o \xe9 injetado em seu componente."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"dispatch")," \xe9 injetado em seu componente ",Object(c.b)("em",{parentName:"p"},"somente")," quando:"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"1. Voc\xea n\xe3o fornece ",Object(c.b)("inlineCode",{parentName:"strong"},"mapDispatchToProps"))),Object(c.b)("p",null,"O ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," padr\xe3o \xe9 simplesmente ",Object(c.b)("inlineCode",{parentName:"p"},"dispatch => ({dispatch}) "),". Se voc\xea n\xe3o fornecer ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps"),", ",Object(c.b)("inlineCode",{parentName:"p"},"dispatch")," ser\xe1 fornecido conforme mencionado acima."),Object(c.b)("p",null,"Em outras palavras, se voc\xea:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"// componente recebe `dispatch`\nconnect(mapStateToProps /** nenhum segundo argumento*/)(Component)\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"2. Seu retorno de fun\xe7\xe3o ",Object(c.b)("inlineCode",{parentName:"strong"},"mapDispatchToProps")," personalizado cont\xe9m especificamente ",Object(c.b)("inlineCode",{parentName:"strong"},"dispatch"))),Object(c.b)("p",null,"Voc\xea pode trazer de volta ",Object(c.b)("inlineCode",{parentName:"p"},"dispatch")," fornecendo sua fun\xe7\xe3o ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," personalizada:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"const mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch(increment()),\n    decrement: () => dispatch(decrement()),\n    reset: () => dispatch(reset()),\n    dispatch\n  }\n}\n")),Object(c.b)("p",null,"Ou, alternativamente, com ",Object(c.b)("inlineCode",{parentName:"p"},"bindActionCreators"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import { bindActionCreators } from 'redux'\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ increment, decrement, reset }, dispatch)\n  }\n}\n")),Object(c.b)("p",null,"Veja ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/reduxjs/react-redux/issues/255"}),"esse erro em a\xe7\xe3o no issue #255 no Github do Redux\u2019s GitHub"),"."),Object(c.b)("p",null,"H\xe1 discuss\xf5es sobre se fornecer ",Object(c.b)("inlineCode",{parentName:"p"},"dispatch")," para seus componentes quando voc\xea especifica ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps")," ( ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/reduxjs/react-redux/issues/255#issuecomment-172089874"}),"Dan Abramov\u2019s response to #255")," ). Voc\xea pode l\xea-los para uma melhor compreens\xe3o da inten\xe7\xe3o de implementa\xe7\xe3o atual."),Object(c.b)("h3",{id:"posso-mapdispatchtoprops-sem-mapstatetoprops-no-redux"},"Posso ",Object(c.b)("inlineCode",{parentName:"h3"},"mapDispatchToProps")," sem ",Object(c.b)("inlineCode",{parentName:"h3"},"mapStateToProps")," no Redux?"),Object(c.b)("p",null,"Sim. Voc\xea pode pular o primeiro par\xe2metro passando ",Object(c.b)("inlineCode",{parentName:"p"},"undefined")," ou",Object(c.b)("inlineCode",{parentName:"p"}," null"),". Seu componente n\xe3o assinar\xe1 a store, e ainda receber\xe1 os props de despacho definidos por ",Object(c.b)("inlineCode",{parentName:"p"},"mapDispatchToProps"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"connect(\n  null,\n  mapDispatchToProps\n)(MyComponent)\n")),Object(c.b)("h3",{id:"posso-chamar-storedispatch"},"Posso chamar ",Object(c.b)("inlineCode",{parentName:"h3"},"store.dispatch"),"?"),Object(c.b)("p",null,"\xc9 fora de padr\xe3o interagir com a store diretamente em um componente React, seja uma importa\xe7\xe3o expl\xedcita da store ou acessando-a via contexto ( consulte ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://redux.js.org/faq/storesetup#can-or-should-i-create-multiple-stores-can-i-import-my-store-directly-and-use-it-in-components-myself"}),"Redux FAQ entry on store setup")," para obter mais detalhes). Deixe o ",Object(c.b)("inlineCode",{parentName:"p"},"connect")," do React Redux lidar com o acesso \xe0 store e usae o ",Object(c.b)("inlineCode",{parentName:"p"},"dispatch")," que ele passa como props para despachar as actions."),Object(c.b)("h2",{id:"links-e-refer\xeancias"},"Links e refer\xeancias"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Tutoriais")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://daveceddia.com/redux-mapdispatchtoprops-object-form/"}),"You Might Not Need the ",Object(c.b)("inlineCode",{parentName:"a"},"mapDispatchToProps")," Function"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Documentos relacionados")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://redux.js.org/api/bindactioncreators"}),"Redux Doc on ",Object(c.b)("inlineCode",{parentName:"a"},"bindActionCreators")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Perguntas e Respostas")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://stackoverflow.com/questions/34458261/how-to-get-simple-dispatch-from-this-props-using-connect-w-redux"}),"How to get simple dispatch from ",Object(c.b)("inlineCode",{parentName:"a"},"this.props")," using connect with Redux?")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/react-redux/issues/255"}),Object(c.b)("inlineCode",{parentName:"a"},"this.props.dispatch")," is ",Object(c.b)("inlineCode",{parentName:"a"},"undefined")," if using ",Object(c.b)("inlineCode",{parentName:"a"},"mapDispatchToProps"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/reduxjs/redux/issues/916"}),"Do not call ",Object(c.b)("inlineCode",{parentName:"a"},"store.dispatch"),", call ",Object(c.b)("inlineCode",{parentName:"a"},"this.props.dispatch")," injected by ",Object(c.b)("inlineCode",{parentName:"a"},"connect")," instead")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://stackoverflow.com/questions/47657365/can-i-mapdispatchtoprops-without-mapstatetoprops-in-redux"}),"Can I ",Object(c.b)("inlineCode",{parentName:"a"},"mapDispatchToProps")," without ",Object(c.b)("inlineCode",{parentName:"a"},"mapStateToProps")," in Redux?")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(o.a)({parentName:"li"},{href:"https://redux.js.org/faq/reactredux"}),"Redux Doc FAQ: React Redux"))))}m.isMDXComponent=!0},147:function(e,a,n){"use strict";n.d(a,"a",(function(){return d})),n.d(a,"b",(function(){return u}));var o=n(0),t=n.n(o);function c(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function p(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){c(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,o,t=function(e,a){if(null==e)return{};var n,o,t={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)n=c[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var i=t.a.createContext({}),m=function(e){var a=t.a.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):p(p({},a),e)),n},d=function(e){var a=m(e.components);return t.a.createElement(i.Provider,{value:a},e.children)},b={inlineCode:"code",wrapper:function(e){var a=e.children;return t.a.createElement(t.a.Fragment,{},a)}},l=t.a.forwardRef((function(e,a){var n=e.components,o=e.mdxType,c=e.originalType,r=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),d=m(n),l=o,u=d["".concat(r,".").concat(l)]||d[l]||b[l]||c;return n?t.a.createElement(u,p(p({ref:a},i),{},{components:n})):t.a.createElement(u,p({ref:a},i))}));function u(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var c=n.length,r=new Array(c);r[0]=l;var p={};for(var s in a)hasOwnProperty.call(a,s)&&(p[s]=a[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,r[1]=p;for(var i=2;i<c;i++)r[i]=n[i];return t.a.createElement.apply(null,r)}return t.a.createElement.apply(null,n)}l.displayName="MDXCreateElement"}}]);